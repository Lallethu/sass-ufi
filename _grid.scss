$grid-columns : 12;

$grid-gaps : ("0" : 0,
    "1" : 10px,
    "2" : 20px,
    "3" : 30px,
);

@each $key,
$val in $grid-gaps {
    .gap-#{$key}>* {
        padding: $val;
    }

    .gap-#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    }
}

$layout-values: flex-start, flex-end, center, space-between, space-around;

@each $val in $layout-values {
    .justify-#{$val} {
        justify-content: $val;
    }
}

.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

.container-fluid {
    width: 100%;
    display: flex;
    padding-right: 20px;
    padding-left: 20px;
    margin-right: auto;
    margin-left: auto;
    box-sizing: border-box;
}

.row {
    display: flex;
    flex-flow: row wrap;
}

@include xs {
    @for $i from 1 through $grid-columns {
        .col-xs-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: calc(($i * 100%) / $grid-columns);
        }
    }
}

@include sm {
    @for $i from 1 through $grid-columns {
        .col-sm-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: calc(($i * 100%) / $grid-columns);
        }
    }
}

@include md {
    @for $i from 1 through $grid-columns {
        .col-md-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: calc(($i * 100%) / $grid-columns);
        }
    }
}

@include lg {
    @for $i from 1 through $grid-columns {
        .col-lg-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: calc(($i * 100%) / $grid-columns);
        }
    }
}

@include xl {
    @for $i from 1 through $grid-columns {
        .col-xl-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: calc(($i * 100%) / $grid-columns);
        }
    }
}